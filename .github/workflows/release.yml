name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # 当推送版本标签时触发
  workflow_dispatch:  # 允许手动触发

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.32.7'
        channel: 'stable'
        
    - name: Enable Windows desktop
      run: flutter config --enable-windows-desktop
      
    - name: Install dependencies
      run: flutter pub get
      
    - name: Build Windows app
      run: flutter build windows --release
      
    - name: Create Windows archive
      run: |
        cd build\windows\x64\runner\Release
        powershell Compress-Archive -Path * -DestinationPath ..\..\..\..\..\windows-app.zip
      
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows-app
        path: windows-app.zip

  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.32.7'
        channel: 'stable'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Build Android APK
      run: flutter build apk --release --split-per-abi
      
    - name: Upload Android artifacts
      uses: actions/upload-artifact@v4
      with:
        name: android-apks
        path: build/app/outputs/flutter-apk/*.apk

  release:
    needs: [build-windows, build-android]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download Windows artifact
      uses: actions/download-artifact@v4
      with:
        name: windows-app
        path: ./artifacts/
        
    - name: Download Android artifacts
      uses: actions/download-artifact@v4
      with:
        name: android-apks
        path: ./artifacts/
        
    - name: Get tag name
      id: tag
      run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ steps.tag.outputs.tag }}
        name: Release ${{ steps.tag.outputs.tag }}
        draft: false
        prerelease: false
        artifacts: |
          ./artifacts/windows-app.zip
          ./artifacts/*.apk
        body: |
          ## 发布说明
          
          ### Windows版本
          - 下载 `windows-app.zip` 并解压后运行exe文件
          
          ### Android版本
          - `app-arm64-v8a-release.apk` - 适用于64位ARM设备（推荐）
          - `app-armeabi-v7a-release.apk` - 适用于32位ARM设备
          - `app-x86_64-release.apk` - 适用于64位x86设备
          
          选择适合您设备架构的APK文件进行安装。
        token: ${{ secrets.GITHUB_TOKEN }}

  # 可选：手动触发的构建job（不发布release）
  build-only:
    if: github.event_name == 'workflow_dispatch' && !startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.3'
        channel: 'stable'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Build Android APK
      run: flutter build apk --release --split-per-abi
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          build/app/outputs/flutter-apk/*.apk
